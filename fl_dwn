import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.nio.file.Path;

@SpringBootApplication
@RestController
public class PdfDownloadApiApplication {

    public static void main(String[] args) {
        SpringApplication.run(PdfDownloadApiApplication.class, args);
    }

    @GetMapping("/download-pdf")
    public ResponseEntity<Resource> downloadPdf() {
        try {
            Path file = Path.of("path/to/your/file.pdf"); // Specify the path to the PDF file
            Resource resource = new UrlResource(file.toUri());
            if (resource.exists() || resource.isReadable()) {
                return ResponseEntity.ok()
                                     .header("Content-Disposition", "attachment; filename=\"" + resource.getFilename() + "\"")
                                     .body(resource);
            } else {
                return ResponseEntity.notFound().build();
            }
        } catch (Exception e) {
            return ResponseEntity.internalServerError().build();
        }
    }
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PDF Viewer</title>
</head>
<body>
    <h1>Download and View PDF</h1>
    <button onclick="downloadAndViewPdf()">Download and View PDF</button>
    <iframe id="pdfFrame" style="width:100%; height:500px;"></iframe>

    <script>
        function downloadAndViewPdf() {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '/download-pdf', true);
            xhr.responseType = 'blob';
            xhr.onload = function () {
                if (this.status === 200) {
                    var file = new Blob([this.response], { type: 'application/pdf' });
                    var fileURL = URL.createObjectURL(file);
                    document.getElementById('pdfFrame').src = fileURL;
                }
            };
            xhr.send();
        }
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PDF Viewer</title>
</head>
<body>
    <h1>Download and View PDF</h1>
    <button onclick="downloadAndViewPdf()">Download and View PDF</button>
    <iframe id="pdfFrame" style="width:100%; height:500px;"></iframe>

    <script>
        function downloadAndViewPdf() {
            fetch('/download-pdf')
                .then(response => {
                    if (response.ok) return response.blob();
                    throw new Error('Network response was not ok.');
                })
                .then(blob => {
                    const fileURL = URL.createObjectURL(blob);
                    document.getElementById('pdfFrame').src = fileURL;
                })
                .catch(error => {
                    console.error('There has been a problem with your fetch operation:', error);
                });
        }
    </script>
</body>
</html>

